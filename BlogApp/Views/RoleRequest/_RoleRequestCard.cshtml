@using BlogApp.Data.Constants
@model BlogApp.Data.Dto.RoleRequest.RoleRequestDetailDto
@{
    var user = Model.User;
    var roleRequest = "Role Request";

    var approveId = "approveId" + Model.Id;
    var approveLabelId = "approveLabel" + Model.Id;
    var approveTitle = "Approve Role Request";
    var approveText = "Are you sure you want to approve this role request?";
    var approveUrl = Url.Action(ControllerConstants.ConfirmRoleRequest, ControllerConstants.RoleRequest, new { roleRequestId = Model.Id });

    var deleteId = "deleteId" + Model.Id;
    var deleteLabelId = "deleteLabel" + Model.Id;
    var deleteTitle = "Delete Role Request";
    var deleteText = "Are you sure you want to delete this role request?";
    var deleteUrl = Url.Action(ControllerConstants.DeleteRoleRequest, ControllerConstants.RoleRequest, new { roleRequestId = Model.Id });
}

<div class="max-w-xs bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border-l-4 border-primary-700">
    <div class="p-4">
        <div class="flex justify-between items-start gap-2 mb-3">
            <div>
                <h3 class="text-lg font-semibold text-gray-900">@user.Name @user.Surname</h3>
                <p class="text-gray-500 text-sm">@($"@{user.UserName}")</p>
            </div>

            <span class="inline-flex items-center px-2.5 py-1 rounded-md text-xs font-bold bg-gradient-to-r from-primary-400 to-primary-600 text-white">
                @roleRequest
            </span>
        </div>

        <div class="mb-4 px-3 py-2 bg-blue-50 rounded-lg">
            <div class="flex items-center">
                <svg class="w-4 h-4 mr-2 text-blue-600 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z" />
                </svg>
                <span class="font-medium text-blue-800">
                     @Model.RoleName
                </span>
            </div>
        </div>

        <div class="space-y-3 mb-1">
            <div class="flex items-center text-sm">
                <svg class="w-4 h-4 mr-2 text-gray-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" />
                    <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" />
                </svg>
                <a href="mailto:@user.Email" class="text-gray-700 hover:text-indigo-600 hover:underline truncate">
                    @user.Email
                </a>
            </div>
        </div>

        <div class="border-t-2 border-gray-200 pt-2 flex gap-4 flex-wrap">
            <div>
                <button 
                    onclick="openModal('@deleteId')"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-150 cursor-pointer">
                    Delete
                </button>
            </div>
            <div>
                <button 
                    onclick="openModal('@approveId')"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors duration-150 cursor-pointer">
                    Approve
                </button>
            </div>
        </div>
    </div>
    @{
        var approveModal = new BlogApp.Models.ConfirmationModalViewModel
            {
                ModalId = approveId,
                ModalIdLabel = approveLabelId,
                Title = approveTitle,
                Message = approveText,
                ConfirmUrl = approveUrl!
            };
    }
    @{
        var deleteModal = new BlogApp.Models.ConfirmationModalViewModel
            {
                ModalId = deleteId,
                ModalIdLabel = deleteLabelId,
                Title = deleteTitle,
                Message = deleteText,
                ConfirmUrl = deleteUrl!
            };
    }
    @await Html.PartialAsync("ConfirmationModal", approveModal)
    @await Html.PartialAsync("ConfirmationModal", deleteModal)
</div>


