@model BlogApp.Data.Dto.Article.ArticleDetailDto
@using BlogApp.Data.Constants
@using BlogApp.Data.Helpers.Roles;

@{
    var title = "Article Details";
    ViewData["Title"] = title;

    var about = "About";
    var publishedOn = "Published on";

    var isCommentator = User.IsInRole(UserRoles.Commentator);

    var commentPartialView = ControllerConstants._Comment;
    var pagination = ControllerConstants._Pagination;
    var commentCreatePartialView = ControllerConstants._CommentCreate;

    ViewData["RouteParams"] = new Dictionary<string, string>
    {
        { "id", Model.Id.ToString() },
    };
}

<div class="max-w-4xl mx-auto px-4 py-8">
    <div class="flex justify-between items-center">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">@Model.Title</h1>
    </div>

    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <div class="mt-2 rounded-lg overflow-hidden shadow-lg">
            <img src="@Model.ImageUrl" alt="@Model.Title" class="w-full h-auto max-h-96 object-cover">
        </div>
    }

    <div class=" mt-4 mb-6 p-6 bg-gray-50 rounded-lg">
        <div class="flex justify-between">
            <div class="flex space-x-4">
                <div class="w-12 h-12 rounded-full bg-gray-300 flex items-center justify-center text-gray-600 font-bold">
                    @Model.User.Name.Substring(0, 1)@Model.User.Surname.Substring(0, 1)
                </div>
                <div>
                    <p class="font-medium text-gray-900">
                        @Model.User.Name @Model.User.Surname
                        <span class="text-gray-500 font-normal">@@@Model.User.UserName</span>
                    </p>
                    <p class="text-sm text-gray-500">
                        @publishedOn @Model.CreatedAt.ToString("MMMM dd, yyyy")
                    </p>
                </div>
            </div>
            @await Html.PartialAsync(ControllerConstants._ArticleVote, Model.Vote)
        </div>
        @if (!string.IsNullOrEmpty(Model.Content))
        {
        <div class="pt-4">
            <h3 class="text-lg font-bold text-gray-900">@about @Model.Title</h3>

                <div class="text-gray-600 mt-1">
                    @Html.Raw(Model.Content)
                </div>
        </div>
        }
    </div>

    <div class="flex justify-between items-center">
        <h1 class="text-xl font-bold text-gray-900">Comments</h1>
    </div>

    @foreach (var comment in Model.PaginatedComments.Items)
    {
        @await Html.PartialAsync(commentPartialView, comment)
    }

    @await Html.PartialAsync(pagination, Model.PaginatedComments)

    @if (isCommentator)
    {
        @await Html.PartialAsync(commentCreatePartialView, new BlogApp.Data.Dto.Comment.CommentCreateDto() { ArticleId = Model.Id })

    }

</div>